{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","type","placeholder","onChange","e","handleChange","App","state","searchField","setState","target","value","fetch","then","Response","json","users","filteredList","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCNXC,G,MAAW,SAACR,GAEvB,OADAS,QAAQC,MAEN,qBAAKT,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAACT,GACnB,OAAO,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCLvCS,G,MAAY,SAACb,GACxB,OACE,uBACEC,UAAU,SACVa,KAAK,SACLC,YAAaf,EAAMe,YACnBC,SAAU,SAACC,GACTjB,EAAMkB,aAAaD,QCkCZE,E,4MAvCbC,MAAQ,CACNT,SAAU,CACR,CAAEL,KAAM,IAAKF,GAAI,GACjB,CAAEE,KAAM,IAAKF,GAAI,IAEnBiB,YAAa,I,EAafH,aAAe,SAACD,GACd,EAAKK,SAAS,CAAED,YAAaJ,EAAEM,OAAOC,S,uDAVxC,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKP,SAAS,CAAEX,SAAUkB,S,oBAQhC,WAAU,IAAD,OACDC,EAAeC,KAAKX,MAAMT,SAASqB,QAAO,SAAC7B,GAAD,OAC9CA,EAAQG,KAAK2B,cAAcC,SAAS,EAAKd,MAAMC,YAAYY,kBAG7D,OACE,sBAAKhC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEc,YAAY,mBACZG,aAAca,KAAKb,eAErB,cAAC,EAAD,CAAUP,SAAUmB,W,GAlCVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.daf783b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => {\r\n  console.log();\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => {\r\n        return <Card monster={monster} key={monster.id} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={(e) => {\r\n        props.handleChange(e);\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends React.Component {\n  state = {\n    monsters: [\n      { name: \"A\", id: 1 },\n      { name: \"B\", id: 2 },\n    ],\n    searchField: \"\",\n  };\n\n  // we make a request 1st thing\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((Response) => Response.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      });\n  }\n\n  //helper method for the event\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const filteredList = this.state.monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    );\n    // console.log(filteredList);\n    return (\n      <div className=\"App\">\n        <h1>Monster Roll</h1>\n        <SearchBox\n          placeholder=\"search for a mob\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}